@model ManageRoles.ViewModels.PersonVM
<script src="~/Scripts/inputmask/inputmask.min.js"></script>
<script src="~/Scripts/inputmask/bindings/inputmask.binding.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>
<div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="panel panel-default">
        <div class="panel-heading">
            Add Person
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>

        <div class="panel-body">
            
                <div id="person_aert" class="alert" hidden="hidden" role="alert">
                    <a href="#" class="close" onclick="hideaert()" aria-label="close">&times;</a>
                    <strong>Message!</strong><div id="person_message"></div>
                </div>
            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @using (Ajax.BeginForm("Person", "Person", new AjaxOptions { HttpMethod = "POST", OnSuccess = "OnSuccess", OnFailure = "OnFailure" }))
            {
                @Html.AntiForgeryToken()

                @*<div class="row top-margin">
                        <div class="col-lg-4">
                            @Html.LabelFor(model => model.MauzaID, htmlAttributes: new { @class = "control-label manadatory" })
                            @Html.DropDownListFor(model => model.MauzaID, new SelectList(Model.Mauza, "ID", "MauzaName"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.MauzaID, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
                <div class="row top-margin">
                    <div class="col-lg-12">

                    </div>
                </div>
                <div class="row top-margin">
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @maxlength = 40 })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.RelationID, htmlAttributes: new { @class = "control-label " })
                        @Html.DropDownListFor(model => model.RelationID, new SelectList(Model.relations, "ID", "Name"), new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RelationID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label " })
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @maxlength = 50 })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="row top-margin">
                    <div class="clearfix"></div>
                    <div class="col-lg-4">

                        @Html.LabelFor(model => model.NIC, htmlAttributes: new { @class = "control-label " })
                        @Html.TextBoxFor(model => model.NIC, new { @class = "form-control", @data_inputmask_regex = @"^[0-9]{5}-[0-9]{7}-[0-9]$" })
                        @Html.ValidationMessageFor(model => model.NIC, "", new { @class = "text-danger" })
                        <br />

                    </div>
                    <div class="col-lg-4">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label " })
                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", data_inputmask = "'mask': '0999-9999999'" })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-lg-4">

                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-lg-4">
                        <input type="submit" value="Add Person" class="btn btn-success" id="BtnAddPerson" />
                        @*@Html.ActionLink("New Person", "NewPerson", "Ownership", null, new { @class = "btn btn-danger", id="BtnSearch" })*@
                    </div>
                </div>

            }
        </div>
    </div>
</div>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    function OnSuccess(data) {
        $("#person_message").html(data.param2);
        $("#person_aert").addClass("alert alert-success alert-dismissible");
        $("#person_aert").show();
         debugger;

        //$("#exampleModalCenter").modal('hide');
        alert('HTTP Status Code: ' + data.param1 + "  " + data.param2);
    }
    function OnFailure(response) {
        data = response.responseJSON;
       
         $("#person_message").html(data.param2);
        $("#person_aert").addClass("alert alert-danger alert-dismissible");
        $("#person_aert").show();
    }
    function hideaert() {
        $("#person_aert").hide();
    }
</script>